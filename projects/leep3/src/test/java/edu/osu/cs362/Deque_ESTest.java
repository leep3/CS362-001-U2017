/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 09 14:27:14 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.osu.cs362.Deque;
import edu.osu.cs362.DequeNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Deque_ESTest extends Deque_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront((-2337));
      DequeNode dequeNode0 = new DequeNode(582);
      dequeNode0.rlink = dequeNode0;
      deque0.rear = dequeNode0;
      int int0 = deque0.peekRear();
      assertEquals(582, int0);
  }

  @Test
  public void test01()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear((-691));
      DequeNode dequeNode0 = deque0.rear;
      dequeNode0.rlink = dequeNode0;
      int int0 = deque0.peekRear();
      assertEquals((-691), int0);
  }

  @Test
  public void test02()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront(1);
      deque0.insertRear(1);
      int int0 = deque0.peekFront();
      assertEquals(1, int0);
  }

  @Test
  public void test03()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear((-691));
      assertFalse(deque0.isEmpty());
      
      deque0.insertFront((-691));
      int int0 = deque0.peekFront();
      assertEquals((-691), int0);
  }

  @Test
  public void test04()  throws Throwable  {
      Deque deque0 = new Deque();
      boolean boolean0 = deque0.isEmpty();
      assertTrue(boolean0);
  }

  @Test
  public void test05()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear(0);
      boolean boolean0 = deque0.isEmpty();
      assertFalse(boolean0);
  }

  @Test
  public void test06()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear(2111);
      assertFalse(deque0.isEmpty());
      
      int int0 = deque0.deleteRear();
      assertEquals(2111, int0);
  }

  @Test
  public void test07()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront(1);
      int int0 = deque0.deleteFront();
      assertEquals(1, int0);
  }

  @Test
  public void test08()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront((-120));
      int int0 = deque0.deleteFront();
      assertEquals((-120), int0);
  }

  @Test
  public void test09()  throws Throwable  {
      Deque deque0 = new Deque();
      DequeNode dequeNode0 = new DequeNode();
      dequeNode0.rlink = dequeNode0;
      deque0.front = dequeNode0;
      deque0.insertFront(1);
      // Undeclared exception!
      try { 
        deque0.print();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear((-691));
      deque0.insertRear(0);
      int int0 = deque0.peekFront();
      assertFalse(deque0.isEmpty());
      assertEquals(0, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear((-691));
      deque0.insertRear(0);
      // Undeclared exception!
      try { 
        deque0.peekRear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.osu.cs362.Deque", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear((-3048));
      deque0.insertRear((-3048));
      deque0.insertRear((-3048));
      deque0.removeRear();
      assertFalse(deque0.isEmpty());
  }

  @Test
  public void test13()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront(0);
      deque0.insertFront(0);
      DequeNode dequeNode0 = deque0.front;
      DequeNode dequeNode1 = dequeNode0.rlink;
      deque0.front = dequeNode1;
      deque0.deleteRear();
      dequeNode1.rlink = deque0.front;
      int int0 = deque0.deleteFront();
      assertFalse(deque0.isEmpty());
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      Deque deque0 = new Deque();
      DequeNode dequeNode0 = new DequeNode();
      deque0.front = dequeNode0;
      // Undeclared exception!
      try { 
        deque0.removeRear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.osu.cs362.Deque", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Deque deque0 = new Deque();
      DequeNode dequeNode0 = new DequeNode((-325));
      deque0.front = dequeNode0;
      // Undeclared exception!
      try { 
        deque0.insertRear((-1722));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.osu.cs362.Deque", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Deque deque0 = new Deque();
      DequeNode dequeNode0 = new DequeNode();
      deque0.front = dequeNode0;
      // Undeclared exception!
      try { 
        deque0.deleteRear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.osu.cs362.Deque", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear((-3048));
      deque0.removeRear();
      assertTrue(deque0.isEmpty());
  }

  @Test
  public void test18()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.removeRear();
      assertTrue(deque0.isEmpty());
  }

  @Test
  public void test19()  throws Throwable  {
      Deque deque0 = new Deque();
      DequeNode dequeNode0 = new DequeNode(582);
      dequeNode0.rlink = dequeNode0;
      deque0.front = dequeNode0;
      deque0.removeFront();
      assertFalse(deque0.isEmpty());
  }

  @Test
  public void test20()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront((-2337));
      deque0.removeFront();
      assertTrue(deque0.isEmpty());
  }

  @Test
  public void test21()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.removeFront();
      assertTrue(deque0.isEmpty());
  }

  @Test
  public void test22()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront((-120));
      deque0.insertRear((-120));
      deque0.deleteRear();
      deque0.insertRear((-120));
      deque0.print();
      assertFalse(deque0.isEmpty());
  }

  @Test
  public void test23()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertFront((-531));
      // Undeclared exception!
      try { 
        deque0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test24()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.print();
      assertTrue(deque0.isEmpty());
  }

  @Test
  public void test25()  throws Throwable  {
      Deque deque0 = new Deque();
      int int0 = deque0.peekRear();
      assertEquals(0, int0);
  }

  @Test
  public void test26()  throws Throwable  {
      Deque deque0 = new Deque();
      deque0.insertRear(0);
      // Undeclared exception!
      try { 
        deque0.peekFront();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.osu.cs362.Deque", e);
      }
  }

  @Test
  public void test27()  throws Throwable  {
      Deque deque0 = new Deque();
      int int0 = deque0.peekFront();
      assertEquals(0, int0);
  }

  @Test
  public void test28()  throws Throwable  {
      Deque deque0 = new Deque();
      int int0 = deque0.deleteRear();
      assertEquals(0, int0);
  }

  @Test
  public void test29()  throws Throwable  {
      Deque deque0 = new Deque();
      assertTrue(deque0.isEmpty());
      
      int int0 = deque0.deleteFront();
      assertEquals(0, int0);
  }
}
